{"version":3,"sources":["Components/Hole.js","Components/Holes.js","App.js","index.js"],"names":["Hole","props","holeClasses","index","selectedHole","className","onClick","e","bonk","Holes","holes","map","key","App","useState","score","setScore","setSelectedHole","countdown","setCountdown","difficulty","setDifficulty","countdownRef","useRef","current","difficultyRef","peep","maxTime","time","min","max","Math","round","random","randomHole","newHole","floor","setTimeout","updateDifficulty","newDifficulty","updateCountdown","isTrusted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEaA,EAAO,SAAAC,GAClB,IAAIC,EAAcD,EAAME,QAAUF,EAAMG,aAAe,UAAY,OACnE,OACE,yBAAKC,UAAWH,GACd,yBAAKG,UAAU,OAAOC,QAAS,SAAAC,GAAC,OAAIN,EAAMO,KAAKD,QCHxCE,EAAQ,SAAAR,GACnB,OACE,oCACGA,EAAMS,MAAMC,KAAI,SAAAR,GACf,OAAO,kBAAC,EAAD,iBAAUF,EAAV,CAAiBW,IAAKT,EAAOA,MAAOA,U,MC+HpCU,MAlIf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAE2BF,mBAAS,MAFpC,mBAENV,EAFM,KAEQa,EAFR,OAGqBH,mBAAS,IAH9B,mBAGNI,EAHM,KAGKC,EAHL,OAIuBL,mBAAS,QAJhC,mBAINM,EAJM,KAIMC,EAJN,KAMTX,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEtBY,EAAeC,iBAAOL,GAC5BI,EAAaE,QAAUN,EAEvB,IAAMO,EAAgBF,iBAAOH,GAC7BK,EAAcD,QAAUJ,EAGxB,IAcMM,EAAO,SAAPA,IACJ,GAAIJ,EAAaE,QAAU,EAAG,CAC5B,IAAIG,EAAU,IACgB,WAA1BF,EAAcD,QAChBG,EAAU,IACyB,SAA1BF,EAAcD,UACvBG,EAAU,KAEZ,IAAMC,GAtBUC,EAsBQ,IAtBHC,EAsBQH,EArBxBI,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,KAI/B,SAAbK,IACJ,IAAMC,EAAUJ,KAAKK,MAAsB,EAAhBL,KAAKE,UAC5BE,IAAY/B,EACd8B,IAEAjB,EAAgBkB,GAahBD,GACAG,YAAW,WACTX,MACCE,GA1BY,IAACC,EAAKC,GA4DnBQ,EAAmB,SAAAC,GACvBtB,EAAgB,MAChBD,EAAS,GACTG,EAAa,IACbE,EAAckB,IAGhB,OACE,yBAAKlC,UAAU,OACb,6CACgB,0BAAMA,UAAU,SAASU,IAEzC,yBAAKV,UAAU,SACb,4BAAQC,QA9BI,WAChBU,EAAS,GACTG,EAAa,IACbkB,YAAW,WACTX,IAhBoB,SAAlBc,IACAlB,EAAaE,QAAU,EACzBa,YAAW,WACTlB,EAAaG,EAAaE,QAAU,GACpCgB,MACC,KAEHvB,EAAgB,MAUhBuB,KACC,MAwBC,SACA,0BAAMnC,UAAU,aACba,EADH,IAC6B,IAAdA,EAAkB,SAAW,UAD5C,SAGA,yBAAKb,UAAU,cACb,0BAAMA,UAAU,qBAAhB,cACA,yBAAKA,UAAU,uBACb,4BACEA,UAAS,6BACQ,SAAfe,EAAwB,6BAA+B,IAEzDd,QAAS,kBAAMgC,EAAiB,UAJlC,QAQA,4BACEjC,UAAS,6BACQ,WAAfe,EAA0B,6BAA+B,IAE3Dd,QAAS,kBAAMgC,EAAiB,YAJlC,UAQA,4BACEjC,UAAS,6BACQ,SAAfe,EAAwB,6BAA+B,IAEzDd,QAAS,kBAAMgC,EAAiB,UAJlC,WAYN,yBAAKjC,UAAU,QACb,kBAAC,EAAD,CAAOK,MAAOA,EAAOF,KAxDd,SAAAD,GACNA,EAAEkC,YACPxB,EAAgB,MAChBD,EAASD,EAAQ,KAqDoBX,aAAcA,OC3HvDsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8823e296.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Hole = props => {\n  let holeClasses = props.index === props.selectedHole ? \"hole up\" : \"hole\";\n  return (\n    <div className={holeClasses}>\n      <div className='mole' onClick={e => props.bonk(e)}></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Hole } from \"./Hole\";\n\nexport const Holes = props => {\n  return (\n    <>\n      {props.holes.map(index => {\n        return <Hole {...props} key={index} index={index} />;\n      })}\n    </>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { Holes } from \"./Components/Holes\";\nimport \"./App.css\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [selectedHole, setSelectedHole] = useState(null);\n  const [countdown, setCountdown] = useState(20);\n  const [difficulty, setDifficulty] = useState(\"easy\");\n\n  let holes = [0, 1, 2, 3, 4, 5];\n\n  const countdownRef = useRef(countdown);\n  countdownRef.current = countdown;\n\n  const difficultyRef = useRef(difficulty);\n  difficultyRef.current = difficulty;\n\n  // time for next mole to pop up\n  const randomTime = (min, max) => {\n    return Math.round(Math.random() * (max - min) + min);\n  };\n\n  // calculate hole for next mole\n  const randomHole = () => {\n    const newHole = Math.floor(Math.random() * 6);\n    if (newHole === selectedHole) {\n      randomHole(holes);\n    } else {\n      setSelectedHole(newHole);\n    }\n  };\n\n  const peep = () => {\n    if (countdownRef.current > 0) {\n      let maxTime = 1000;\n      if (difficultyRef.current === \"medium\") {\n        maxTime = 800;\n      } else if (difficultyRef.current === \"hard\") {\n        maxTime = 600;\n      }\n      const time = randomTime(200, maxTime);\n      randomHole();\n      setTimeout(() => {\n        peep();\n      }, time);\n    }\n  };\n\n  // update countdown timer\n  const updateCountdown = () => {\n    if (countdownRef.current > 0) {\n      setTimeout(() => {\n        setCountdown(countdownRef.current - 1);\n        updateCountdown();\n      }, 1000);\n    } else {\n      setSelectedHole(null);\n    }\n  };\n\n  // start game\n  const startGame = () => {\n    setScore(0);\n    setCountdown(20);\n    setTimeout(() => {\n      peep();\n      updateCountdown();\n    }, 50);\n  };\n\n  // when mole is hit\n  const bonk = e => {\n    if (!e.isTrusted) return;\n    setSelectedHole(null);\n    setScore(score + 1);\n  };\n\n  // update game difficulty\n  const updateDifficulty = newDifficulty => {\n    setSelectedHole(null);\n    setScore(0);\n    setCountdown(20);\n    setDifficulty(newDifficulty);\n  };\n\n  return (\n    <div className='App'>\n      <h1>\n        Whack-a-mole! <span className='score'>{score}</span>\n      </h1>\n      <div className='infos'>\n        <button onClick={startGame}>Start</button>\n        <span className='countdown'>\n          {countdown} {countdown === 1 ? \"second\" : \"seconds\"} left\n        </span>\n        <div className='difficulty'>\n          <span className='difficulty__title'>Difficulty</span>\n          <div className='difficulty__buttons'>\n            <button\n              className={`difficulty__button ${\n                difficulty === \"easy\" ? \"difficulty__button--active\" : \"\"\n              }`}\n              onClick={() => updateDifficulty(\"easy\")}\n            >\n              Easy\n            </button>\n            <button\n              className={`difficulty__button ${\n                difficulty === \"medium\" ? \"difficulty__button--active\" : \"\"\n              }`}\n              onClick={() => updateDifficulty(\"medium\")}\n            >\n              Medium\n            </button>\n            <button\n              className={`difficulty__button ${\n                difficulty === \"hard\" ? \"difficulty__button--active\" : \"\"\n              }`}\n              onClick={() => updateDifficulty(\"hard\")}\n            >\n              Hard\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className='game'>\n        <Holes holes={holes} bonk={bonk} selectedHole={selectedHole} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}